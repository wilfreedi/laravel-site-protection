class i{constructor(e,t){this.encryptionKey=e,this.apiEndpoint=t}collectData(){const e={userAgent:navigator.userAgent,cookiesEnabled:navigator.cookieEnabled,language:navigator.language,platform:navigator.platform},t={screenWidth:window.screen.width,screenHeight:window.screen.height,colorDepth:window.screen.colorDepth},n={timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,offset:new Date().getTimezoneOffset()},o=this.detectAutomation();return{navigator:e,screen:t,timezone:n,isAutomated:o,timestamp:new Date().toISOString()}}detectAutomation(){return navigator.webdriver||window.outerWidth===0||window.outerHeight===0}async encryptData(e){const t=new TextEncoder,n=t.encode(JSON.stringify(e)),o=await crypto.subtle.importKey("raw",t.encode(this.encryptionKey),{name:"AES-GCM"},!1,["encrypt"]),a=crypto.getRandomValues(new Uint8Array(12)),c=await crypto.subtle.encrypt({name:"AES-GCM",iv:a},o,n);return{encrypted:btoa(String.fromCharCode(...new Uint8Array(c))),iv:btoa(String.fromCharCode(...a))}}async sendData(){const e=this.collectData(),t=await this.encryptData(e);return(await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok}}const s=new i("your-encryption-key","/api/collect-data");s.sendData().then(r=>{console.log(r?"Data sent successfully":"Failed to send data")});
